---
import { Icon } from "astro-icon";
import type { Project } from "@data";
import Badge from "./ui/Badge.astro";

export interface Props {
  project: Project;
}

const { project } = Astro.props;
const { name, description, repoUrl, thumbnail, liveUrl, techStackAndTools } =
  project;

const isVideoThumbnail = thumbnail?.endsWith(".webm");
---

<article
  class="border border-slate-300 dark:border-slate-700 rounded-lg shadow-md bg-slate-100 dark:bg-slate-800"
>
  <div class="overflow-hidden relative group">
    <div class="flex items-center absolute right-4 top-4 z-10">
      {
        repoUrl && (
          <a
            href={repoUrl}
            class="text-white p-3 bg-black/50 rounded-full backdrop-blur-md"
            aria-label="Repo URL"
            target="_blank"
            title="Repo URL"
          >
            <Icon name="github" />
          </a>
        )
      }
      {
        liveUrl && (
          <a
            href={liveUrl}
            class="text-white p-3 bg-black/50 rounded-full backdrop-blur-md ml-1"
            aria-label="Live URL"
            target="_blank"
            title="Live URL"
          >
            <Icon name="link" />
          </a>
        )
      }
    </div>
    {
      isVideoThumbnail ? (
        <video
          class="rounded-t-lg w-full h-auto"
          src={thumbnail ?? "/project-thumbnail-placeholder.png"}
          width="640"
          height="360"
          autoplay
          muted
          loop
        />
      ) : (
        <img
          class="rounded-t-lg w-full h-auto"
          src={thumbnail ?? "/project-thumbnail-placeholder.png"}
          alt={name}
          width="640"
          height="360"
        />
      )
    }
  </div>
  <div class="p-5">
    <h3 class="mb-2">
      <a
        class="font-montserrat text-2xl font-bold tracking-tight text-gray-900 dark:text-white"
        href={liveUrl}
        target="_blank"
        rel="noopener">{name}</a
      >
    </h3>
    {
      description.map((v) => (
        <p
          class="font-normal text-gray-700 dark:text-gray-400 [&:not(:last-child)]:mb-3"
          set:html={v}
        />
      ))
    }
    <div class="flex flex-row gap-2 flex-wrap mt-6">
      {techStackAndTools.map((v) => <Badge content={v} />)}
    </div>
  </div>
</article>

<style lang="css">
  [astro-icon] {
    width: 1rem;
  }
</style>
